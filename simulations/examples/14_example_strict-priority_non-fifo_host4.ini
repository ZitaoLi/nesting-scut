[General]
network = TestScenario8

check-signals = false
record-eventlog = false 
debug-on-errors = true
result-dir = results_strict_priority
sim-time-limit = 1s

# debug
**.displayAddresses = true
**.verbose = true
**.promiscuous = true
**.registerProtocol = true

**.*.clock.clockRate = "1us"

# number of flows
**.robotController1.numberOfFlow = 2
**.robotController2.numberOfFlow = 1

# MAC Addresses
#**.robotController1.flow[0].eth.address = "00-00-00-00-00-01"
#**.robotController1.flow[1].eth.address = "00-00-00-00-00-02"
#**.robotController2.flow[0].eth.address = "00-00-00-00-00-03"
#**.roboticArm1.eth.address = "00-00-00-00-00-04"
#**.roboticArm2.eth.address = "00-00-00-00-00-05"

# Switches
**.switch*.processingDelay[*].delay = 5us
**.filteringDatabase.database = xmldoc("xml/routes/TestScenario8/routes_flat.xml", "/filteringDatabases/")
**.filteringDatabase.cycle = xmldoc("xml/schedules/TestScenario8/switches/GCLs_flat.xml", "/schedule/")

**.gateController.initialSchedule = xmldoc("xml/schedules/TestScenario8/switches/switches_flat.xml")
**.gateController.enableHoldAndRelease = false
**.switch*.eth[*].queuing.tsAlgorithms[0].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[1].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[2].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[3].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[4].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[5].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[6].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[7].typename = "NonFIFO"
**.queues[0].expressQueue = true
**.queues[1].expressQueue = true
**.queues[2].expressQueue = true
**.queues[3].expressQueue = true
**.queues[4].expressQueue = true
**.queues[5].expressQueue = true
**.queues[6].expressQueue = true
**.queues[7].expressQueue = true

**.queues[*].bufferCapacity = 363360b

**.switchA.eth[0].mac.enablePreemptingFrames = false
**.switchA.eth[1].mac.enablePreemptingFrames = false

# Schedule/Routing Swap
#**.scheduleSwap.schedule = xmldoc("xml/TestScenarioScheduleSwap.xml")

# Robot Controller
**.robotController1.flow[0].trafGenSchedApp.initialSchedule = xmldoc("xml/schedules/TestScenario8/hosts/robotController1/flow1.xml")
**.robotController1.flow[1].trafGenSchedApp.initialSchedule = xmldoc("xml/schedules/TestScenario8/hosts/robotController1/flow2.xml")
**.robotController2.flow[0].trafGenSchedApp.initialSchedule = xmldoc("xml/schedules/TestScenario8/hosts/robotController2/flow3.xml")

# Workstations
#**.workstation*.trafGenQueueApp.destAddress = "01-00-00-00-00-05"
#**.workstation*.trafGenQueueApp.packetLength = 1500Byte-4Byte # MTU-Size - VLAN-Tag-Size
#**.workstation*.trafGenQueueApp.vlanTagEnabled = true
#**.workstation1.trafGenQueueApp.pcp = 5
#**.workstation2.trafGenQueueApp.pcp = 5

# Robotic Arms
**.roboticArm1.trafGenApp.numPacketsPerBurst = 0
**.roboticArm1.trafGenApp.sendInterval = 1ms
**.roboticArm1.trafGenApp.packetLength = 100B
**.roboticArm2.trafGenApp.numPacketsPerBurst = 0
**.roboticArm2.trafGenApp.sendInterval = 1ms
**.roboticArm2.trafGenApp.packetLength = 100B

# Backup Server
#**.backupServer.trafGenApp.numPacketsPerBurst = 0
#**.backupServer.trafGenApp.sendInterval = 1ms
#**.backupServer.trafGenApp.packetLength = 100B
